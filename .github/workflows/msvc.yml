name: Build (MSVC)

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: Windows (x64),          flags: -A x64, artifact: 'Kengine-VC-x64' }
          - { name: Windows (x86),          flags: -A Win32, artifact: 'Kengine-VC-x86' }
          - { name: Windows static VCRT (x64), flags: -A x64, artifact: 'Kengine-VC-static-VCRT-x64' }
          - { name: Windows static VCRT (x86), flags: -A Win32, artifact: 'Kengine-VC-static-VCRT-x86' }
          - { name: Windows (clang-cl x64), flags: -T ClangCL -A x64, artifact: 'Kengine-clang-cl-x64' }
          - { name: Windows (clang-cl x86), flags: -T ClangCL -A Win32, artifact: 'Kengine-clang-cl-x86' }
          - { name: Windows (ARM),          flags: -A ARM, artifact: 'Kengine-VC-arm32' }
          - { name: Windows (ARM64),        flags: -A ARM64, artifact: 'Kengine-VC-arm64' }
    name: ${{ matrix.name }}
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        
    - name: Cache SDL3
      uses: actions/cache@v4
      with:
        path: |
          SDL3
        key: sdl3-${{ matrix.artifact }}
        
    - name: Clone SDL3
      uses: actions/checkout@v4
      with:
        repository: 'libsdl-org/SDL'
        path: 'SDL3'
        submodules: true

    - name: Build SDL3
      run: |
        if ! test -d SDL3; then
            if ! test -d SDL3/build; then
                mkdir SDL3/build
                cmake -S SDL3 -B SDL3/build -DSDL_STATIC_PIC=ON -DSDL_STATIC=ON -DCMAKE_INSTALL_PREFIX=prefix ${{ matrix.flags }}
                cmake --build SDL3/build --config ${{env.BUILD_TYPE}} --parallel
            fi
        fi
      shell: bash
    
    - name: Install SDL3
      run: |
        echo "SDL3_DIR=$Env:GITHUB_WORKSPACE/prefix" >> $Env:GITHUB_ENV
        cmake --install SDL3/build

    - name: Cache SDL3_ttf
      uses: actions/cache@v4
      with:
        path: |
          SDL3_ttf
        key: sdl3-ttf-${{ matrix.artifact }}
        
    - name: Clone SDL3_ttf
      uses: actions/checkout@v4
      with:
        repository: 'libsdl-org/SDL_ttf'
        path: 'SDL3_ttf'
        submodules: true

    - name: Build SDL3_ttf
      run: |
        if ! test -d SDL3_ttf; then
            if ! test -d SDL3_ttf/build; then
                mkdir SDL3_ttf/build
                cmake -S SDL3_ttf -B SDL3_ttf/build -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=prefix ${{ matrix.flags }}
                cmake --build SDL3_ttf/build --config ${{env.BUILD_TYPE}} --parallel
            fi
        fi
      shell: bash
    
    - name: Install SDL3_ttf
      run: |
        echo "SDL_ttf_DIR=$Env:GITHUB_WORKSPACE/prefix" >> $Env:GITHUB_ENV
        cmake --install SDL3_ttf/build
        
    - name: Configure CMake
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ${{ matrix.flags }}
    
    - name: Build
      run: |
        cmake --build build --config ${{env.BUILD_TYPE}} --verbose --parallel
    
    - name: Install Kengine
      run: |
        cmake --install build --component Kengine

#    - name: Test
#      working-directory: ${{github.workspace}}/build
#      run: ctest -C ${{env.BUILD_TYPE}}

    - uses: actions/upload-artifact@v4
      with:
        if-no-files-found: error
        name: ${{ matrix.artifact }}
        path: build/dist/*
